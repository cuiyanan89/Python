#!/usr/bin/python
#encoding:utf-8
import os
import stat
#class my_work(object):
empty_file_names = []
empty_dir_names = []
file_names = []
    
def my_list(root):
    g = os.walk(root)
    r,d,f = g.next()
    if d == [] and f == []:
        empty_dir_names.append(r)
    for i in f:
        ff = os.path.join(r,i)
        if os.stat(ff).st_size == 0:
            empty_file_names.append(ff)
        file_names.append(ff)
    for j in d:
        rr = os.path.join(r,j)
        my_list(rr)
    
def qingli():
#        for name in __file_names:
#            if '.txt' in name:
#                os.remove(name)
    for i in empty_file_names:
        os.remove(i)
    for j in empty_dir_names:
        os.remove(j)

def shadu(file_names):
    for name in file_names:
        f = open(name)
        s = f.read()
        f.close()
        if 'bad' in s:
            os.remove(name)
   
def yunxing(self):
    print '欢迎使用，按q退出'
    x = True
    while x != 'q':
        x = raw_input('请输入您要执行操作的目录-------->')
        my_list(x)
        x = raw_input('杀毒:k 清理:c--------->')
        if x == 'k':
            shadu(file_names)
        elif x == 'c':
            qingli()

#a=my_work()
#a.yunxing()
#    my_list(r'/csvt/n12/python_note/')
#    for name in __file_names:
#        print 'file>',name
#    for name in empty_dir_names:
#        print 'emptydir>',name
#    for name in empty_file_names:
#        print 'emptyfile>',name
    #shadu(__file_names)
    #qingli(__file_names)
